openapi: 3.0.0
info:
  description: Sora-reader backend API
  version: "1.0.0"
  title: Sora
  contact:
    email: 1337kwiz@gmail.com
  license:
    name: GPLv3
    url: 'https://www.gnu.org/licenses/gpl-3.0.en.html'
tags:
  - name: auth
    description: Authentication and user/token manipulation
  - name: manga
    description: Endpoints for fetching manga data
  - name: docs
    description: Meta endpoints with information about API
paths:
  /api/auth/sign-in/:
    post:
      description: Sign in with user credentials
      operationId: signIn
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
          description: 'successful operation'
  /api/auth/sign-out/:
    get:
      description: Sign user out and blacklist his token
      operationId: signOut
      tags:
      - auth
      responses:
        '200':
          description: No response body
  /api/auth/sign-up/:
    post:
      description: Sign up and receive JWT token pair and a username
      operationId: signUp
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
          description: 'successful operation'
  /api/auth/token-refresh/:
    post:
      operationId: refreshToken
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshToken'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: 'successful operation'
  /api/auth/token-verify/:
    post:
      operationId: verifyToken
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyToken'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyToken'
          description: 'successful operation'
  '/api/manga/{mangaId}':
    get:
      tags:
        - manga
      summary: Get manga detail by ID
      description: Returns detailed info about manga
      operationId: mangaDetail
      parameters:
        - name: mangaId
          in: path
          description: ID of manga to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manga'
        '404':
          description: Manga not found
  '/api/manga/{mangaId}/chapters':
    get:
      tags:
        - manga
      summary: Get manga chapters by ID
      description: Returns chapters for manga
      operationId: mangaChapters
      parameters:
        - name: mangaId
          in: path
          description: ID of manga to get chapters for
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MangaChapter'
        '404':
          description: Manga not found
  '/api/manga/{chapterId}/images':
    get:
      tags:
        - manga
      summary: Get images for chapter by ID
      description: Returns images for chapter
      operationId: mangaChapterImages
      parameters:
        - name: chapterId
          in: path
          description: ID of chapter to get images for
          required: true
          schema:
            type: number
        - name: parse
          in: query
          description: Whether to run parsing of images again (if links are broken)
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MangaChapterImage'
              example: ["https://cdn.com/vol1/0?token=some_token", "https://cdn.com/vol1/1?token=some_token"]
        '404':
          description: Manga or volume not found
  /api/manga/search:
    get:
      tags:
        - manga
      parameters:
        - name: title
          in: query
          description: Manga title
          required: true
          schema:
            type: string
      summary: Search manga by title
      description: Returns a list of manga items
      operationId: search
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Manga'
  /api/docs/schema/:
    get:
      summary: Get OpenApi 3.0 schema
      operationId: getSchema
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - docs
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: 'successful operation'
components:
  schemas:
    Manga:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        alt_title:
          type: string
        rating:
          type: number
          format: float
          minimum: 0
          maximum: 10
        thumbnail:
          type: string
          format: uri
          maxLength: 2000
        image:
          type: string
          format: uri
          maxLength: 2000
        description:
          type: string
        source:
          type: string
        authors:
          type: array
          items:
            type: string
        screenwriters:
          type: array
          items:
            type: string
        illustrators:
          type: array
          items:
            type: string
        translators:
          type: array
          items:
            type: string
        genres:
          type: array
          items:
            type: string
        categories:
          type: array
          items:
            type: string
        status:
          type: string
        year:
          type: string
        updated_detail:
          type: string
          format: date-time
        updated_chapters:
          type: string
          format: date-time
      required:
      - id
      - title
      - description
      example:
        id: 0
        title: some_manga
        alt_title: some_manga_in_japanese
        rating: 9.32
        thumbnail: "https://cdn.com/some_image_compressed/"
        image: "https://cdn.com/some_image_full/"
        description: another isekai
        source: MangaSite
        authors: ["SomeGuy", "MayBeOtherGuy"]
        screenwriters: []
        illustrators: []
        translators: []
        updated_chapters: "2021-07-01T18:07:19.600463Z"
        updated_detail: "2021-07-01T18:07:16.272237Z"
    MangaChapter:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        link:
          type: string
          format: uri
        number:
          type: number
        volume:
          type: number
      example:
        id: 0
        title:  some_manga
        link:  https://mangasite.com/some_manga
        number:  0
        volume:  1
    MangaChapterImage:
      type: string
      example: "https://cdn.com/vol1/0?token=some_token"
    VerifyToken:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    AccessToken:
      type: object
      properties:
        access:
          type: string
      required:
      - access
    RefreshToken:
      type: object
      properties:
        refresh:
          type: string
      required:
      - string
    UserCredentials:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          maxLength: 128
      required:
      - password
      - username
    TokenResponse:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
        username:
          type: string
      required:
      - access
      - refresh
      - username
