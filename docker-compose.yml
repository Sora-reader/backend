services:
  web:
    profiles:
      - prod
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    restart: unless-stopped
    expose:
      - 8000
    environment:
      - ALLOWED_HOSTS
      - SECRET_KEY
      - PROXY
      - DATABASE_URL=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-sora}
      # Static
      - DEBUG=0
      - HOST=0.0.0.0
      - PORT=8000
      - REDIS_URL=redis://redis:6379
      - TYPESENSE_HOST=typesense
    ports:
      - "${PORT:-80}:8000"
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:8000/api/health" ]
      interval: 5s
      timeout: 5s

  web_dev:
    profiles:
      - dev
    build:
      context: .
      dockerfile: docker/web/Dockerfile.dev
    expose:
      - 8000
    environment:
      - PROXY
      - DATABASE_URL=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-sora}
      # Static
      - SECRET_KEY=Dev
      - HOST=0.0.0.0
      - PORT=8000
      - REDIS_URL=redis://redis:6379
      - TYPESENSE_HOST=typesense
    ports:
      - "${PORT:-8000}:8000"
    volumes:
      - ./:/app
      - sora_poetry:/home/sora/.cache/pypoetry

  rq_dev:
    profiles:
      - dev
    image: backend_web_dev
    restart: unless-stopped
    command: "bash -c 'until poetry run python manage.py rqworker default;\
      do echo cant start, may be venv is not loaded yet, waiting;\
      sleep 2;done'"
    volumes:
      - ./:/app
      - sora_poetry:/home/sora/.cache/pypoetry
    environment:
      - PROXY
      # Static
      - SECRET_KEY=dev
      - DATABASE_URL=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-sora}
      - REDIS_URL=redis://redis:6379
      - TYPESENSE_HOST=typesense
    depends_on:
      - web_dev

  rq:
    profiles:
      - prod
    image: backend_web
    restart: unless-stopped
    command: poetry run python manage.py rqworker default
    environment:
      - PROXY
      - SECRET_KEY
      - DATABASE_URL=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-sora}
      # Static
      - DEBUG=0
      - REDIS_URL=redis://redis:6379
      - TYPESENSE_HOST=typesense
    depends_on:
      - web

  db:
    profiles:
      - data
      - prod
      - dev
    restart: unless-stopped
    image: postgres:15
    ports:
      - "8882:5432"
    volumes:
      - sora_postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-sora}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    healthcheck:
      # Wait for postgres to actually start before consider service 'healthy'
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s

  redis:
    profiles:
      - data
      - prod
      - dev
    image: redis
    command: redis-server
    restart: unless-stopped
    expose:
      - 6379
    ports:
      - "8883:6379"
    volumes:
      - sora_redis:/var/lib/redis
      - sora_redis:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 5s

  typesense:
    profiles:
      - data
      - prod
      - dev
    image: typesense/typesense:0.23.1
    restart: unless-stopped
    command: --data-dir /data --api-key=${TYPESENSE_API_KEY:-api} --enable-cors
    volumes:
      - tsdata:/data
    ports:
      - "8108:8108"

volumes:
  tsdata:
  sora_poetry:
  sora_redis:
  sora_postgres:
